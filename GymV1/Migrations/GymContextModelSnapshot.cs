// <auto-generated />
using System;
using GymV1.ModelsContextDTOs.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymV1.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.EquipmentGymClass", b =>
                {
                    b.Property<int>("EquipmentGymClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentGymClassId"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("GymClassId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("EquipmentGymClassId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("GymClassId");

                    b.ToTable("EquipmentGymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.GymClass", b =>
                {
                    b.Property<int>("GymClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GymClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.HasKey("GymClassId");

                    b.HasIndex("InstructorId");

                    b.ToTable("GymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MembershipId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.MembershipGymClass", b =>
                {
                    b.Property<int>("MembershipGymClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipGymClassId"));

                    b.Property<int>("GymClassId")
                        .HasColumnType("int");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.HasKey("MembershipGymClassId");

                    b.HasIndex("GymClassId");

                    b.HasIndex("MembershipId");

                    b.ToTable("MembershipGymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.EquipmentGymClass", b =>
                {
                    b.HasOne("GymV1.ModelsContextDTOs.Models.Equipment", "Equipment")
                        .WithMany("EquipmentGymClasses")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymV1.ModelsContextDTOs.Models.GymClass", "GymClass")
                        .WithMany("EquipmentGymClasses")
                        .HasForeignKey("GymClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("GymClass");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.GymClass", b =>
                {
                    b.HasOne("GymV1.ModelsContextDTOs.Models.Instructor", "Instructor")
                        .WithMany("GymClasses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Membership", b =>
                {
                    b.HasOne("GymV1.ModelsContextDTOs.Models.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.MembershipGymClass", b =>
                {
                    b.HasOne("GymV1.ModelsContextDTOs.Models.GymClass", "GymClass")
                        .WithMany("MembershipGymClasses")
                        .HasForeignKey("GymClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymV1.ModelsContextDTOs.Models.Membership", "Membership")
                        .WithMany("MembershipGymClasses")
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GymClass");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Subscription", b =>
                {
                    b.HasOne("GymV1.ModelsContextDTOs.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentGymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.GymClass", b =>
                {
                    b.Navigation("EquipmentGymClasses");

                    b.Navigation("MembershipGymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Instructor", b =>
                {
                    b.Navigation("GymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.Membership", b =>
                {
                    b.Navigation("MembershipGymClasses");
                });

            modelBuilder.Entity("GymV1.ModelsContextDTOs.Models.User", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
